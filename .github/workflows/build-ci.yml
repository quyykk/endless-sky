name: Build CI

# TODO:
# - Construct even more intelligent workflows
#    e.g.
#      data/* -> use "latest" build for triggering branch, only run parse and/or acceptance tests
#      source/* -> build new binary, run all tests, cache binary
#      PR opened -> upload artifact ZIPs to PR as comment, and edit/replace as new commits come in

on:
  workflow_call:


jobs:
  build_ubuntu:
    name: Ubuntu
    runs-on: ubuntu-${{ matrix.os }}
    strategy:
      matrix:
        os: [20.04, 18.04]
        opengl: [desktop, gles]
    env:
      ARCH: x86_64
      OUTPUT: endless-sky-x86_64-continuous.AppImage
      CCACHE_DIR: ${{ github.workspace }}/ccache
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - name: Cache ccache results
      uses: actions/cache@v3
      with:
        path: ${{ env.CCACHE_DIR }}
        key: ubuntu-${{ matrix.os }}-${{ matrix.opengl }}-ccache-${{ github.repository }}-${{ github.ref }}-${{ github.sha }}
        restore-keys: |
          ubuntu-${{ matrix.os }}-${{ matrix.opengl }}-ccache-${{ github.repository }}-${{ github.ref }}-
          ubuntu-${{ matrix.os }}-${{ matrix.opengl }}-ccache-${{ github.repository }}-
          ubuntu-${{ matrix.os }}-${{ matrix.opengl }}-ccache-
    - name: Build Endless Sky
      uses: ./.github/actions/ubuntu
      with:
        ccache: 'true'
        opengl: ${{ matrix.opengl }}
    - name: Run Benchmarks
      run: ./build/linux/Release/endless-sky-tests.exe [!benchmark]
    - name: Package Application
      if: ${{ matrix.os == '20.04' }}
      run: ./utils/build_appimage.sh
    - name: Upload game binary
      # The integration tests which use this artifact only support Ubuntu 20.04.
      if: ${{ matrix.os == '20.04' }}
      uses: actions/upload-artifact@v3
      with:
        name: binary-ubuntu-${{ matrix.os }}-${{ matrix.opengl }}
        path: ${{ env.OUTPUT }}


  build_windows:
    name: Windows
    runs-on: windows-latest
    strategy:
      matrix:
        mingw: ['8.5.0', '10.3.0', '12.1.0']
    env:
        CCACHE_DIR: ${{ github.workspace}}\ccache
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - name: Cache ccache results
      uses: actions/cache@v3
      with:
        path: ${{ env.CCACHE_DIR }}
        key: ${{ matrix.mingw }}-ccache-${{ github.repository }}-${{ github.ref }}-${{ github.sha }}
        restore-keys: |
          ${{ matrix.mingw }}-ccache-${{ github.repository }}-${{ github.ref }}-
          ${{ matrix.mingw }}-ccache-${{ github.repository }}-
          ${{ matrix.mingw }}-ccache
    - name: Build Endless Sky
      uses: ./.github/actions/windows
      with:
        ccache: 'true'
        version: ${{ matrix.mingw }}
    - name: Run Benchmarks
      run: .\build\ming\Release\EndlessSkyTests.exe [!benchmark]
    - name: Upload game binary
      if: ${{ matrix.mingw == '12.1.0' }}
      uses: actions/upload-artifact@v3
      with:
        name: binary-windows-latest
        path: |
          build/mingw/Release/EndlessSky.exe
          build/mingw/Release/*.dll


  build_macos:
    name: MacOS
    runs-on: macos-${{ matrix.os }}
    strategy:
      matrix:
        os: [12, 11]
    env:
      CCACHE_DIR: ${{ github.workspace }}/ccache
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - name: Cache ccache results
      uses: actions/cache@v3
      with:
        path: ${{ env.CCACHE_DIR }}
        key: macos-${{ matrix.os }}-ccache-${{ github.repository }}-${{ github.ref }}-${{ github.sha }}
        restore-keys: |
          macos-${{ matrix.os }}-ccache-${{ github.repository }}-${{ github.ref }}-
          macos-${{ matrix.os }}-ccache-${{ github.repository }}-
          macos-${{ matrix.os }}-ccache
    - name: Build Endless Sky
      uses: ./.github/actions/macos
    - name: Run Benchmarks
      run: ./build/macos/Release/EndlessSkyTests [!benchmark]
