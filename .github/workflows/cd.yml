name: CD

on:
  push:
    branches:
      - master
  pull_request:
    types:
      - synchronize
      - opened

jobs:
  ubuntu_x86_64:
    name: Ubuntu x64
    runs-on: ubuntu-18.04
    env:
      ARCH: x86_64
      OUTPUT: endless-sky-x86_64-continuous.AppImage
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Adjust version strings
        run: ./utils/cd_update_versions.sh
        shell: bash
      - uses: ./.github/actions/build/ubuntu
      - name: Package Application
        run: ./utils/build_appimage.sh
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.OUTPUT }}
          path: ${{ env.OUTPUT }}


  windows_win32:
    name: Windows x86
    runs-on: windows-latest
    env:
      OUTPUT: EndlessSky-win32-continuous.zip
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Adjust version strings
        run: ./utils/cd_update_versions.sh
        shell: bash
      - uses: lukka/get-cmake@latest
      - uses: lukka/run-vcpkg@v10.2
        with:
          appendedCacheKey: msvc-win32
      - uses: lukka/run-cmake@v10
        with:
          configurePreset: 'msvc32'
          buildPreset: 'msvc32-release'
      - name: Run Unit Tests
        run: .\build\msvc32\Release\EndlessSkyTests.exe
      - name: Package Application
        run: |
          COPY .\build\msvc32\Release\EndlessSky.exe .
          COPY ".\build\msvc32\Release\*.dll" .
          7z a ${{ env.OUTPUT }} .\sounds\ .\images\ .\data\ *.dll license.txt keys.txt icon.png EndlessSky.exe credits.txt copyright changelog
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.OUTPUT }}
          path: ${{ env.OUTPUT }}


  windows_win64:
    name: Windows x64
    runs-on: windows-latest
    env:
      OUTPUT: EndlessSky-win64-continuous.zip
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Adjust version strings
        run: ./utils/cd_update_versions.sh
        shell: bash
      - uses: ./.github/actions/build/windows
      - name: Package Application
        run: |
          COPY .\build\mingw\Release\EndlessSky.exe .
          COPY ".\build\mingw\Release\*.dll" .
          7z a ${{ env.OUTPUT }} .\sounds\ .\images\ .\data\ *.dll license.txt keys.txt icon.png EndlessSky.exe credits.txt copyright changelog
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.OUTPUT }}
          path: ${{ env.OUTPUT }}


  macos_x86_64:
    name: MacOS x64
    runs-on: macos-latest
    env:
      OUTPUT: EndlessSky-macOS-continuous.zip
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Adjust version strings
        run: ./utils/cd_update_versions.sh
        shell: bash
      - uses: ./.github/actions/build/macos
        with:
          mavericks: 'true'
      - name: Package Application
        run: |
          cd build/macos/Release
          ls -la
          7z a ${{ github.workspace }}/${{ env.OUTPUT }} EndlessSky.app
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.OUTPUT }}
          path: ${{ env.OUTPUT }}


  upload_artifacts_to_release:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs:
      - ubuntu_x86_64
      - windows_win32
      - windows_win64
      - macos_x86_64
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      OUTPUT_UBUNTU: endless-sky-x86_64-continuous.AppImage
      OUTPUT_WIN32: EndlessSky-win32-continuous.zip
      OUTPUT_WIN64: EndlessSky-win64-continuous.zip
      OUTPUT_MACOS: EndlessSky-macOS-continuous.zip
    steps:
      - uses: actions/checkout@v3
      - name: Install github-release
        run: |
          go get github.com/github-release/github-release
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      - name: Set environment variables
        run: |
          echo "GITHUB_USER=$( echo ${{ github.repository }} | cut -d/ -f1 )" >> $GITHUB_ENV
          echo "GITHUB_REPO=$( echo ${{ github.repository }} | cut -d/ -f2 )" >> $GITHUB_ENV
      - name: Move/Create continuous tag
        run: |
          git tag --force continuous ${{ github.sha }}
          git push --tags --force
      - name: Setup continuous release
        run: |
          DESCRIPTION="Triggered on $(date -u '+%Y/%m/%d, %H:%M') UTC by commit ${{ github.sha }} (@${{ github.actor }})

          This is an automated build of the latest source. It may be unstable or even crash, corrupt your save or eat your kitten. Use with caution!

          https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          if ! github-release info -t continuous > /dev/null 2>&1; then
            github-release release \
              --tag continuous \
              --name "Continuous Build" \
              --description "$DESCRIPTION" \
              --pre-release
          else
            github-release edit \
              --tag continuous \
              --name "Continuous Build" \
              --description "$DESCRIPTION" \
              --pre-release
          fi
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: ${{ github.workspace }}
      - name: Add ${{ env.OUTPUT_UBUNTU }} to release tag
        run: |
          github-release upload \
            --tag continuous \
            --replace \
            --name ${{ env.OUTPUT_UBUNTU }} \
            --file ${{ env.OUTPUT_UBUNTU }}/${{ env.OUTPUT_UBUNTU }}
      - name: Add ${{ env.OUTPUT_WIN32 }} to release tag
        run: |
          github-release upload \
            --tag continuous \
            --replace \
            --name ${{ env.OUTPUT_WIN32 }} \
            --file ${{ env.OUTPUT_WIN32 }}/${{ env.OUTPUT_WIN32 }}
      - name: Add ${{ env.OUTPUT_WIN64 }} to release tag
        run: |
          github-release upload \
            --tag continuous \
            --replace \
            --name ${{ env.OUTPUT_WIN64 }} \
            --file ${{ env.OUTPUT_WIN64 }}/${{ env.OUTPUT_WIN64 }}
      - name: Add ${{ env.OUTPUT_MACOS }} to release tag
        run: |
          github-release upload \
            --tag continuous \
            --replace \
            --name ${{ env.OUTPUT_MACOS }} \
            --file ${{ env.OUTPUT_MACOS }}/${{ env.OUTPUT_MACOS }}
