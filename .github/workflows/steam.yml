name: Steam

on:
  push:
    branches:
      - master
      - cmake
      - releases/v[0-9]+.[0-9]+.[0-9]+

jobs:
  changed:
    uses: ./.github/workflows/compute-changes.yml

  build_linux:
    name: Steam Linux
    needs: changed
    if: ${{ needs.changed.outputs.game_code == 'true' || needs.changed_outputs.cmake == 'true' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x64, x86]
    env:
      ARTIFACT: endless-sky
    steps:
    - uses: actions/checkout@v3
    - name: Build Endless Sky
      run: |
        cd steam
        docker-compose run endless-sky-${{ matrix.arch }}
    - name: Prepare binary
      run: cp build/steam-${{ matrix.arch }}/${{ env.ARTIFACT }} .
    - name: Upload GH artifact
      uses: actions/upload-artifact@v2
      with:
        name: binary-${{ runner.os }}-${{ matrix.arch }}
        path: |
          ${{ env.ARTIFACT }}
          credits.txt

  test_linux:
    needs: build_linux
    if: ${{ needs.changed.outputs.game_code == 'true' || needs.changed.outputs.cmake == 'true' || needs.changed.integration_tests == 'true' }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-latest]
    env:
      snapshot: latest-steam-client-general-availability
      tarball: steam-runtime.tar.xz
    steps:
    - uses: actions/checkout@v3
    - name: Download Steam Runtime environment
      run: curl -sSf https://repo.steampowered.com/steamrt-images-scout/snapshots/${{ env.snapshot }}/${{ env.tarball }} > ${{ env.tarball }}
    - name: Extract Steam Runtime
      run: tar -xf ${{ env.tarball }}
    - name: Download Endless Sky binary
      uses: actions/download-artifact@v3
      with:
        name: binary-${{ runner.os }}-x64
        path: .
    - name: Install xvfb runtime dependencies
      run: |
        sudo apt-get update -q
        sudo apt-get install -y --no-install-recommends libosmesa6 mesa-utils
    - name: Pin Steam libraries
      run: steam-runtime/setup.sh
    - run: chmod +x endless-sky
    - run: steam-runtime/run.sh ./endless-sky -v
    - name: Execute data parsing test
      run: steam-runtime/run.sh ./utils/test_parse.sh ./endless-sky
    # NOTE: As with the non-Steam integration tests, on Ubuntu 18.04 the call to SDL_GL_CreateContext fails
    # with SDL error "Could not create GL Context: BadValue (integer parameter out of range for operation)"
    - name: Execute integration tests
      if: matrix.os != 'ubuntu-18.04'
      env:
          PRINT_GLXINFO: true
      run: steam-runtime/run.sh tests/integration/run_tests_headless.sh

  deploy_linux:
    needs: test_linux
    runs-on: ubuntu-latest
    # environment: steam
    env:
      dir32: binary-Linux-x86
      dir64: binary-Linux-x64
      ARTIFACT: endless-sky
    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v3
      with:
        path: ${{ github.workspace }}
    - name: Prepare binary upload
      run: |
        chmod +x ${{ env.dir32 }}/${{ env.ARTIFACT }}
        chmod +x ${{ env.dir64 }}/${{ env.ARTIFACT }}
    # - uses: game-ci/steam-deploy@v0.1
    #   with:
    #     appId: 404410
    #     buildDescription: canary-${{ github.sha }}
    #     username: ${{ secrets.STEAM_DEPLOY_UN }}
    #     password: ${{ secrets.STEAM_DEPLOY_PW }}
    #     mfaCode: ${{ secrets.STEAM_DEPLOY_MFA }}
    #     rootPath: ''
    #     depot6Path: ${{ env.dir32 }}
    #     depot7Path: ${{ env.dir64 }}
    #     releaseBranch: canary

#  deploy_data_depot:
#    needs: changed
#    if: needs.changed.outputs.data == 'true'
#    runs-on: ubuntu-latest
#    # environment: steam
#    env:
#      dir: data-depot
#    steps:
#    - uses: actions/checkout@v3
#    - name: 'Prepare data upload'
#      run: |
#        mkdir ${{ env.dir }}
#        mv -t ${{ env.dir }} \
#          changelog \
#          copyright \
#          credits.txt \
#          icon.png \
#          keys.txt \
#          license.txt \
#          data/ \
#          images/ \
#          sounds/
#    - name: Verify move
#      run: head -n 13 ${{ env.dir }}/credits.txt
    # - uses: game-ci/steam-deploy@v0.1
    #   with:
    #     appId: 404410
    #     buildDescription: canary-${{ github.sha }}
    #     username: ${{ secrets.STEAM_DEPLOY_UN }}
    #     password: ${{ secrets.STEAM_DEPLOY_PW }}
    #     mfaCode: ${{ secrets.STEAM_DEPLOY_MFA }}
    #     rootPath: ''
    #     depot1Path: ${{ env.dir }}
    #     releaseBranch: canary
